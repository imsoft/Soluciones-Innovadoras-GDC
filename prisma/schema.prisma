// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             Int             @id @default(autoincrement())
  product        String
  price          Float
  internalSku    String          @unique
  ean            String          @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  userId         String
  ticketProducts TicketProduct[]
  orderProducts  OrderProduct[]
}

model TicketProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  ticketId  Int
  quantity  Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  ticket    Ticket  @relation(fields: [ticketId], references: [id], onDelete: Cascade)
}

model Ticket {
  id             Int             @id @default(autoincrement())
  subject        String
  content        String
  sentAt         DateTime        @default(now())
  userId         String
  recipient      String
  totalAmount    Float
  ticketProducts TicketProduct[]
}

model Order {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  totalAmount   Float
  customerEmail String
  userId        String
  orderProducts OrderProduct[]
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  orderId   Int
  quantity  Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
